How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Manual searching of differences between two versions of a file is time consuming. The changes
    that could've caused the bug are easily spotted by using diff.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Easy access to the entire history of a file would mean I would be able to experiment a lot more
    with new versions of the file and if any bug was created, I could revert back to previous versions
    that work.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    This gives us more control and hence every commit is useful because each commit is only made when
    there is a logical change.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is meant for saving programs and often times multiple files are linked to each other.

How can you use the commands git log and git diff to view the history of files?

    git log would give me access to all the changes that have been made and git diff lets me see what
    these changes are.

How might using version control make you more confident to make changes that
could break something?

    If something broke, I could just checkout a previous version that works.

Now that you have your workspace set up, what do you want to try using Git for?

    I want to be able to share and showcase my work.

